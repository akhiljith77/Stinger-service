name: CI/CD Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Create .env file
        run: |
          echo "HOST=${{ secrets.DB_ENDPOINT }}" >> .env
          echo "DBPORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DATABASE=${{ secrets.DB_DATABASE }}" >> .env 

      # - name: Run tests
      #   run: npm run test

      # - name: Create .env file
      #   run: |
      #     echo "POSTGRESQL_HOST=${{ secrets.HOST }}" >> .env
      #     echo "POSTGRESQL_DBPORT=${{ secrets.DBPORT }}" >> .env
      #     echo "POSTGRESQL_DB_USERNAME=${{ secrets.GOOGLE_REDIDB_USERNAMERECT_URL }}" >> .env
      #     echo "POSTGRESQL_DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
      #     echo "POSTGRESQL_DATABASE=${{ secrets.DATABASE }}" >> .env
      #     echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Deploy to Server 
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/Stinger-service
            git pull origin master
            npm install
            npm run build
            pm2 stop Stinger-service 2>/dev/null || true
            pm2 delete Stinger-service 2>/dev/null || true
            pm2 start dist/main.js --name "Stinger-service"      
